<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.kafka.test.utils.KafkaTestUtils"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.Assertions"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.EnableKafka"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.KafkaListener"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.ConsumerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.listener.AcknowledgingMessageListener"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.amqp.RabbitProperties.ContainerType"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.listener.ContainerProperties"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.listener.ContainerProperties.AckMode"/>
    <fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="javax.persistence.Enumerated"/>
    <fullyQualifiedTypeName name="javax.persistence.EnumType"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="javax.persistence.OneToOne"/>
    <fullyQualifiedTypeName name="javax.persistence.JoinColumn"/>
    <fullyQualifiedTypeName name="javax.persistence.CascadeType"/>
    <fullyQualifiedTypeName name="lombok.ToString"/>
    <fullyQualifiedTypeName name="lombok.ToString.Exclude"/>
    <fullyQualifiedTypeName name="org.springframework.data.repository.CrudRepository"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.ObjectMapper"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.context.SpringBootTest"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.test.EmbeddedKafkaBroker"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.config.KafkaListenerEndpointRegistry"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.listener.MessageListenerContainer"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.test.utils.ContainerTestUtils"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.Test"/>
    <fullyQualifiedTypeName name="java.util.concurrent.CountDownLatch"/>
    <fullyQualifiedTypeName name="java.util.concurrent.TimeUnit"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.mock.mockito.SpyBean"/>
    <fullyQualifiedTypeName name="com.learnkafka.consumer.LibraryEventConsumer"/>
    <fullyQualifiedTypeName name="com.learnkafka.jpa.LibraryEventsRepository"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="com.learnkafka.entity.LibraryEvent"/>
    <fullyQualifiedTypeName name="com.learnkafka.entity.LibraryEventType"/>
    <fullyQualifiedTypeName name="com.learnkafka.entity.Book"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="org.mockito.ArgumentMatcher"/>
    <fullyQualifiedTypeName name="jdk.internal.org.jline.utils.Log"/>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="org.springframework.retry.policy.SimpleRetryPolicy"/>
    <fullyQualifiedTypeName name="org.springframework.retry.backoff.FixedBackOffPolicy"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
    <fullyQualifiedTypeName name="org.springframework.dao.RecoverableDataAccessException"/>
    <fullyQualifiedTypeName name="javax.management.RuntimeErrorException"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.consumer.ConsumerRecord"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.learnkafka.service.LibraryEventsService"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.KafkaTemplate"/>
</qualifiedTypeNameHistroy>
